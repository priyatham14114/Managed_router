sap.ui.define(["./baseController","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/json/JSONModel","sap/m/Token","sap/ui/core/Fragment","sap/m/MessageBox"],function(e,t,o,n,i,s,r){"use strict";return e.extend("com.first_fs_app.controller.userView",{onInit:function(){const e=new n({author:"",bookName:"",stock:"",books_sold:"",published_on:"",phone:""});this.getView().setModel(e,"newAuthorModel");this.getOwnerComponent().getRouter().attachRoutePatternMatched(this.onAuthorListLoad,this)},onAuthorListLoad:function(){this.getView().byId("idAuthorTable").getBinding("items").refresh();const e=this.getView();const t=e.byId("idAuthorValue"),o=e.byId("idBooksNameValue"),n=e.byId("idNoOfBooksSoldValue"),s=e.byId("idPhoneFilterValue");const r=[t,o,n,s];r.forEach(e=>{e.addValidator(function(e){if(true){var t=e.text;return new i({key:t,text:t})}})})},onFilterClick:function(e){debugger;const n=this.getView();const i=n.byId("idAuthorValue").getTokens();const s=n.byId("idBooksNameValue").getTokens(),r=n.byId("idNoOfBooksSoldValue").getTokens(),a=n.byId("idPhoneFilterValue").getTokens();const u=n.byId("idAuthorTable");var d=[];var h=[i,s,r,a];h.forEach(e=>{if(e){e.filter(e=>{i.length>0?d.push(new t("author",o.EQ,e.getKey())):"";s.length>0?d.push(new t("bookName",o.EQ,e.getKey())):"";r.length>0?d.push(new t("books_sold",o.EQ,e.getKey())):"";a.length>0?d.push(new t("phone",o.EQ,e.getKey())):""})}});u.getBinding("items").filter(d)},onClear:function(){const e=this.getView(),t=e.byId("idAuthorValue").destroyTokens(),o=e.byId("idBooksNameValue").destroyTokens(),n=e.byId("idNoOfBooksSoldValue").destroyTokens(),i=e.byId("idPhoneFilterValue").destroyTokens()},onSelectAuthor:function(e){const{ID:t,author:o}=e.getSource().getSelectedItem().getBindingContext().getObject();const n=this.getOwnerComponent().getRouter();n.navTo("RouteDetails",{authorId:t,authorname:o})},onCreateBtnPress:async function(){if(!this.oCreateAuthorDialog){this.oCreateAuthorDialog=await this.loadFragment("createAuthor")}this.oCreateAuthorDialog.open()},onCloseDialog:function(){if(this.oCreateAuthorDialog.isOpen()){this.oCreateAuthorDialog.close()}},createData:async function(e,t,o){debugger;return new Promise((n,i)=>{e.create(o,t,{success:function(e){n(e)},error:function(e){i(e)}})})},onCreateAuthor:async function(){debugger;const e=this.getView().getModel("newAuthorModel").getProperty("/"),t=this.getView().getModel("ModelV2");try{await this.createData(t,e,"/Books");this.getView().byId("idAuthorTable").getBinding("items").refresh();this.oCreateAuthorDialog.close()}catch(e){this.oCreateAuthorDialog.close();r.error("Some technical Issue")}}})});